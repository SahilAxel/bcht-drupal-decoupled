<?php

use Drupal\core\Url;
use Drupal\Core\Link;
use Drupal\node\Entity\Node;
use Drupal\views\Views;
use Drupal\paragraphs\Entity\Paragraph;
use Drupal\file\Entity\File;
use Drupal\image\Entity\ImageStyle;
use Drupal\Core\Menu\MenuLinkInterface;
use Drupal\menu_link_content\Plugin\Menu\MenuLinkContent;
use Drupal\block\Entity\Block;
use \Drupal\Core\Template\Attribute;
use Drupal\node\NodeInterface;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function bcht_theme_suggestions_page_alter(array &$suggestions, array $variables)
{
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    $content_type = $node->bundle();
    $suggestions[] = 'page__' . $content_type;
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function bcht_theme_suggestions_node_alter(array &$suggestions, array $variables)
{
  $viewMode = $variables['elements']['#view_mode'];
  $suggestions[] = 'node__view_mode__' . $viewMode;
}

/**
 * Implements hook_preprocess_HOOK() for paragraph.
 */
function bcht_preprocess_paragraph(&$variables)
{
  $paragraph = $variables['paragraph'];

  // Check if the paragraph type is 'rich-text'.
  if ($paragraph->bundle() == 'rich_text') {
    $variables['#attached']['library'][] = 'bcht/rich-text';
    $variables['attributes']['class'][] = 'container-small component__wrapper';
  }

  // Check if the paragraph type is 'accordion'.
  if ($paragraph->bundle() == 'accordion') {
    $variables['#attached']['library'][] = 'bcht/accordion';
    $variables['attributes']['class'][] = 'container-small component__wrapper';
  }

  // Passing node title in hero interior pages component.
  if ($paragraph->bundle() == 'hero_interior_pages') {
    $parentEntity = $paragraph->getParentEntity();
    if ($parentEntity instanceof NodeInterface) {
      $variables['node_title'] = $parentEntity->getTitle();
    }
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 *
 * Add views unformatted template suggestions.
 *
 * @inheritdoc
 */
function bcht_theme_suggestions_views_view_unformatted_alter(array &$suggestions, array $variables)
{
  $suggestions[] = 'views_view_unformatted__' . $variables['view']->id();
}

/**
 *
 * @inheritdoc
 */
function bcht_preprocess_node(&$variables)
{
  $variables['base_path'] = base_path();
}

/**
 *
 * @inheritdoc
 */
function bcht_form_alter(&$form, FormStateInterface $form_state, $form_id)
{
  if ($form['#id'] == "views-exposed-form-search-block-1") {
    $form['#attributes']['class'][] = "search-form-wrapper";
  }
}
