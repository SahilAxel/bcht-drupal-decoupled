{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{{ attach_library('bcht/home-herobanner') }}
{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished'
  ]
%}
{% set parentNode = paragraph.parentEntity %}
{% block paragraph %}
	<div{{attributes.addClass(classes)}}>
		{% block content %}
			<div class="hero_banner_wrapper">
				{% if content.field_image.0 and content.field_image['#is_multiple'] == false %}
					{% set image_url = content.field_image[0]['#media'].field_media_image.entity.uri.value|image_style('home_banner_desktop') %}
					{% set mobile_image_url = content.field_image[0]['#media'].field_media_image.entity.uri.value|image_style('home_banner_mobile') %}
					<div class="hero_image">
						<picture>
							<source media="(min-width:768px)" srcset="{{ image_url }}">
							<source media="(min-width:465px)" srcset="{{ mobile_image_url }}">
							<img src="{{ image_url }}" alt="{{ content.field_hero_heading .0['#context'].value }}">
						</picture>
					</div>
				{% endif %}
					<div class="hero_banner_content">
            <div class="hero_banner_content_inner">
						{% if content.field_hero_heading.0['#context'].value and content.field_hero_heading	['#is_multiple'] == false %}
							<h1>{{ content.field_hero_heading.0['#context'].value }}</h1>
						{% else %}
							<h1>{{ node_title }}</h1>
						{% endif %}

						{% if content.field_sub_heading.0 and content.field_sub_heading['#is_multiple'] == false %}
							<div class="sub_heading">{{ content.field_sub_heading.0['#context'].value }}</div>
						{% endif %}
						{# We need to different calss for two links. Only two fields will be shown from the twig file for this component. #}
						{% if content.field_hero_cta_buttons.0  or content.field_hero_cta_buttons.1 %}
							<div class="cta_group">
								{% if content.field_hero_cta_buttons.0 %}
									<span class="cta cta_btn_1">
										{% if content.field_hero_cta_buttons.0['#url'].external %}
											<a class="btn btn--default" href="{{ content.field_hero_cta_buttons.0['#url'].uri }}" target="_blank" title="Opens in a new window">{{ content.field_hero_cta_buttons.0['#title'] }}</a>
										{% else %}
											<a class="btn btn--default" href="{{ path(content.field_hero_cta_buttons.0['#url'].routeName, content.field_hero_cta_buttons.0['#url'].routeParameters) }}">{{ content.field_hero_cta_buttons.0['#title'] }}</a>
										{% endif %}
									</span>
								{% endif %}
								{% if content.field_hero_cta_buttons.1 %}
									<span class="cta cta_btn_2">
										{% if content.field_hero_cta_buttons.1['#url'].external %}
											<a class="btn-transparent btn-transparent--default" href="{{ content.field_hero_cta_buttons.1['#url'].uri }}" target="_blank" title="Opens in a new window">{{ content.field_hero_cta_buttons.1['#title'] }}</a>
										{% else %}
											<a class="btn-transparent btn-transparent--default" href="{{ path(content.field_hero_cta_buttons.1['#url'].routeName, content.field_hero_cta_buttons.1['#url'].routeParameters) }}">{{ content.field_hero_cta_buttons.1['#title'] }}</a>
										{% endif %}
									</span>
								{% endif %}
							</div>
						{% endif %}
            </div>
					</div>
				</div>
			{% endblock %}
		</div>
	{% endblock paragraph %}
