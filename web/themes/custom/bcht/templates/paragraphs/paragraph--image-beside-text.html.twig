{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{{ attach_library('bcht/imagebesidetext') }}
{%
  set classes = [
    'paragraph',
	  'text_image_component_wrapper',
    'component__wrapper',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished',
    content.field_layout.0['#markup'] == 'image_on_left' ? 'image_on_left' : 'image_on_right',
  ]
%}
{% block paragraph %}
<div{{attributes.addClass(classes)}}>
	{% block content %}
    <div class="text_image_wrapper">
      <div class="left_content_wrapper">
        {% if content.field_eyebrow.0 and content.field_eyebrow['#is_multiple'] == false %}
          <div class="text_eyebrow">{{ content.field_eyebrow.0|raw }}</div>
        {% endif %}
        <h2>{{ content.field_heading.0|raw }}</h2>
        {% if content.field_description.0 and content.field_description['#is_multiple'] == false %}
          <div class="text_content">{{ content.field_description.0|raw }}</div>
        {% endif %}
        {% if content.field_cta_link.0 and content.field_cta_link['#is_multiple'] == false %}
          <div class="cta cta_btn">
          {% if content.field_cta_link.0['#url'].external %}
            <a class="link-arrow-btn link-arrow-btn--default" href="{{ content.field_cta_link.0['#url'].uri }}" target="_blank" title="Opens in a new window">{{ content.field_cta_link.0['#title'] }}</a>
          {% else %}
            <a class="link-arrow-btn link-arrow-btn--default" href="{{ path(content.field_cta_link.0['#url'].routeName, content.field_cta_link.0['#url'].routeParameters) }}">{{ content.field_cta_link.0['#title'] }}</a>
          {% endif %}
          </div>
        {% endif %}
      </div>
      <div class="right_content_wrapper">
        {% if content.field_image[0]['#media'].field_media_image.entity.uri.value and content.field_image['#is_multiple'] == false %}
          {% set media_uri = content.field_image[0]['#media'].field_media_image.entity.uri.value|image_style('image_optimize') %}
            <div class="image_content"><img src={{ media_uri }}  alt="Card title - {{ content.field_heading.0|raw }}" /></div>
        {% endif %}
      </div>
    </div>
	{% endblock %}
  </div>
{% endblock paragraph %}
